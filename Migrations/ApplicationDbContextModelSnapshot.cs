// <auto-generated />
using System;
using ExperimentTester.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExperimentTester.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExperimentTester.Models.Experiment", b =>
                {
                    b.Property<Guid>("ExperimentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DistributionPercentage")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExperimentID");

                    b.ToTable("Experiments");
                });

            modelBuilder.Entity("ExperimentTester.Models.ExperimentParticipantAssociation", b =>
                {
                    b.Property<Guid>("AssociationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExperimentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParticipantID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AssociationID");

                    b.HasIndex("ExperimentID");

                    b.HasIndex("ParticipantID");

                    b.ToTable("ExperimentParticipantAssociations");
                });

            modelBuilder.Entity("ExperimentTester.Models.Participant", b =>
                {
                    b.Property<Guid>("ParticipantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeviceToken")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ParticipantID");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("ExperimentTester.Models.ExperimentParticipantAssociation", b =>
                {
                    b.HasOne("ExperimentTester.Models.Experiment", "Experiment")
                        .WithMany("ExperimentParticipantAssociations")
                        .HasForeignKey("ExperimentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExperimentTester.Models.Participant", "Participant")
                        .WithMany("ExperimentParticipantAssociations")
                        .HasForeignKey("ParticipantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Experiment");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("ExperimentTester.Models.Experiment", b =>
                {
                    b.Navigation("ExperimentParticipantAssociations");
                });

            modelBuilder.Entity("ExperimentTester.Models.Participant", b =>
                {
                    b.Navigation("ExperimentParticipantAssociations");
                });
#pragma warning restore 612, 618
        }
    }
}
